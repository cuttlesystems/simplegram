# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST
# 'specfileconf.json' file with 'application_type' wriiten in it
#  as a value of 'ApplicationTypeEnum' class object
/deploy/build_desktop/specfileconf.json

# deploy concerned files
# remote server credentials (IP, user, password) to establish SSH connection
#  with remote server where the application backend is deployed 
/deploy/deploy_server/scripts/backendservercredentials.json
# file with credentials to login into private docker registry
/deploy/deploy_server/scripts/dockerregistrycredentials.json

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# файлы настройки среды PyCharm
.idea/
**/.DS_Store
/server_simple_gram/backend/bot_django_project/data_files

# файл с индивидуальными настройками подключения
/mini_app/app_tests/connection_settings.json

# сгенерированные тестовые боты
/mini_app/bot_*

# сгенерированный файл с информацией о коммите
/mini_app/current_commit_info.json

# файлы настройки среды VSCode 
*/.vscode/*
.vscode/

# скомпилированные .ui файлы
ui_*.py

# скомпилированные файлы Qt переводов
*.qm

*.pyproject.user

# скомпилированные файлы Qt ресурсов
rc_*.py
